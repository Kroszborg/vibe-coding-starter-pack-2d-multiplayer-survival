// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import {
  AlgebraicType,
  AlgebraicValue,
  BinaryReader,
  BinaryWriter,
  CallReducerFlags,
  ConnectionId,
  DbConnectionBuilder,
  DbConnectionImpl,
  DbContext,
  ErrorContextInterface,
  Event,
  EventContextInterface,
  Identity,
  ProductType,
  ProductTypeElement,
  ReducerEventContextInterface,
  SubscriptionBuilderImpl,
  SubscriptionEventContextInterface,
  SumType,
  SumTypeVariant,
  TableCache,
  TimeDuration,
  Timestamp,
  deepEqual,
} from "@clockworklabs/spacetimedb-sdk";
// A namespace for generated variants and helper functions.
export namespace WeatherType {
  // These are the generated variant types for each variant of the tagged union.
  // One type is generated per variant and will be used in the `value` field of
  // the tagged union.
  export type Clear = { tag: "Clear" };
  export type LightRain = { tag: "LightRain" };
  export type ModerateRain = { tag: "ModerateRain" };
  export type HeavyRain = { tag: "HeavyRain" };
  export type HeavyStorm = { tag: "HeavyStorm" };

  // Helper functions for constructing each variant of the tagged union.
  // ```
  // const foo = Foo.A(42);
  // assert!(foo.tag === "A");
  // assert!(foo.value === 42);
  // ```
  export const Clear = { tag: "Clear" };
  export const LightRain = { tag: "LightRain" };
  export const ModerateRain = { tag: "ModerateRain" };
  export const HeavyRain = { tag: "HeavyRain" };
  export const HeavyStorm = { tag: "HeavyStorm" };

  export function getTypeScriptAlgebraicType(): AlgebraicType {
    return AlgebraicType.createSumType([
      new SumTypeVariant("Clear", AlgebraicType.createProductType([])),
      new SumTypeVariant("LightRain", AlgebraicType.createProductType([])),
      new SumTypeVariant("ModerateRain", AlgebraicType.createProductType([])),
      new SumTypeVariant("HeavyRain", AlgebraicType.createProductType([])),
      new SumTypeVariant("HeavyStorm", AlgebraicType.createProductType([])),
    ]);
  }

  export function serialize(writer: BinaryWriter, value: WeatherType): void {
      WeatherType.getTypeScriptAlgebraicType().serialize(writer, value);
  }

  export function deserialize(reader: BinaryReader): WeatherType {
      return WeatherType.getTypeScriptAlgebraicType().deserialize(reader);
  }

}

// The tagged union or sum type for the algebraic type `WeatherType`.
export type WeatherType = WeatherType.Clear | WeatherType.LightRain | WeatherType.ModerateRain | WeatherType.HeavyRain | WeatherType.HeavyStorm;

export default WeatherType;

