// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import {
  AlgebraicType,
  AlgebraicValue,
  BinaryReader,
  BinaryWriter,
  CallReducerFlags,
  ConnectionId,
  DbConnectionBuilder,
  DbConnectionImpl,
  DbContext,
  ErrorContextInterface,
  Event,
  EventContextInterface,
  Identity,
  ProductType,
  ProductTypeElement,
  ReducerEventContextInterface,
  SubscriptionBuilderImpl,
  SubscriptionEventContextInterface,
  SumType,
  SumTypeVariant,
  TableCache,
  TimeDuration,
  Timestamp,
  deepEqual,
} from "@clockworklabs/spacetimedb-sdk";
export type PlayerDodgeRollState = {
  playerId: Identity,
  startTimeMs: bigint,
  startX: number,
  startY: number,
  targetX: number,
  targetY: number,
  direction: string,
  lastDodgeTimeMs: bigint,
};

/**
 * A namespace for generated helper functions.
 */
export namespace PlayerDodgeRollState {
  /**
  * A function which returns this type represented as an AlgebraicType.
  * This function is derived from the AlgebraicType used to generate this type.
  */
  export function getTypeScriptAlgebraicType(): AlgebraicType {
    return AlgebraicType.createProductType([
      new ProductTypeElement("playerId", AlgebraicType.createIdentityType()),
      new ProductTypeElement("startTimeMs", AlgebraicType.createU64Type()),
      new ProductTypeElement("startX", AlgebraicType.createF32Type()),
      new ProductTypeElement("startY", AlgebraicType.createF32Type()),
      new ProductTypeElement("targetX", AlgebraicType.createF32Type()),
      new ProductTypeElement("targetY", AlgebraicType.createF32Type()),
      new ProductTypeElement("direction", AlgebraicType.createStringType()),
      new ProductTypeElement("lastDodgeTimeMs", AlgebraicType.createU64Type()),
    ]);
  }

  export function serialize(writer: BinaryWriter, value: PlayerDodgeRollState): void {
    PlayerDodgeRollState.getTypeScriptAlgebraicType().serialize(writer, value);
  }

  export function deserialize(reader: BinaryReader): PlayerDodgeRollState {
    return PlayerDodgeRollState.getTypeScriptAlgebraicType().deserialize(reader);
  }

}


